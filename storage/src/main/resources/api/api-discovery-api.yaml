swagger: '2.0'

info:
  title: API Discovery Storage API
  version: '0.2'
  description: |
    Storage API of the API Discovery Solution (a.k.a Meta-API) is currently used to manage versions and Applications of
    APIs. Later, it will be also used to manage API's meta inforamtion like documentation and user manuals.

externalDocs:
  description: API Discovery Solution Documentation
  url: https://github.com/zalando-incubator/api-discovery

basePath: /
produces:
- application/json
consumes:
- application/json

security:
- oauth2: [uid, overarching.api_definition.write]

paths:
  '/apis':
    get:
      summary: list all APIs
      description: Lists of all APIs
      operationId: 'org.zalando.apidiscovery.storage.api/read-apis'
      tags:
      - APIs
      security:
      - oauth2:
        - uid
      parameters:
      - name: lifecycle_state
        in: query
        type: string
        description: Filter APIs by lifecycle state
        required: false
      - name: limit
        in: query
        type: integer
        description: Maximal number of results
        required: false
      - name: cursor
        in: query
        type: string
        description: Cursor
        required: false
      responses:
        200:
          description: List of APIs and Cursors for pagination
          schema:
            type: object
            description: List of all APIs
            properties:
              apis:
                type: array
                items:
                  $ref: '#/definitions/APIMetadata'
              cursors:
                $ref: '#/definitions/Cursors'
        default:
          $ref: '#/responses/Error'

  '/apis/{api_id}':
    get:
      summary: read API
      description: Returns details about the API
      operationId: 'org.zalando.apidiscovery.storage.api/read-api'
      tags:
      - APIs
      security:
      - oauth2:
        - uid
      parameters:
      - name: api_id
        in: path
        type: string
        description: ID of the API
        required: true
      responses:
        200:
          description: API's details
          schema:
            $ref: '#/definitions/API'
        default:
          $ref: '#/responses/Error'

  '/apis/{api_id}/versions':
    get:
      summary: reads all versions of an API
      description: List of all versions of an API
      operationId: "org.zalando.apidiscovery.storage.api/get-api-versions!"
      tags:
      - APIs
      - Versions
      security:
      - oauth2:
        - uid
      parameters:
      - name: api_id
        in: path
        type: string
        description: ID of the API
        required: true
      - name: lifecycle_state
        in: query
        type: string
        description: Filter versions by lifecycle state
        required: false
      responses:
        200:
          description: List of API's versions
          schema:
            type: array
            items:
              $ref: '#/definitions/Version'
        default:
          $ref: '#/responses/Error'

  '/apis/{api_id}/versions/{version_name}':
    get:
      summary: reads a version of an API
      description: Specific version of an API
      operationId: "org.zalando.apidiscovery.storage.api/get-api-version!"
      tags:
      - APIs
      - Versions
      security:
      - oauth2:
        - uid
      parameters:
      - name: api_id
        in: path
        type: string
        description: ID of the API
        required: true
      - name: version_name
        in: path
        type: string
        description: Version name
        required: true
      responses:
        200:
          description: Version of the API
          schema:
            $ref: '#/definitions/Version'
        default:
          $ref: '#/responses/Error'

  '/apis/{api_id}/Applications':
    get:
      summary: reads all Applications of an API
      description: List of all Applications of an API
      operationId: "org.zalando.apidiscovery.storage.api/get-api-Applications!"
      tags:
      - APIs
      - Applications
      security:
      - oauth2:
        - uid
      parameters:
      - name: api_id
        in: path
        type: string
        description: ID of the API
        required: true
      - name: lifecycle_state
        in: query
        type: string
        description: Filter Applications by lifecycle state
        required: false
      responses:
        200:
          description: List of API's Applications
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
        default:
          $ref: '#/responses/Error'

  '/apis/{api_id}/Applications/{Application_name}':
    get:
      summary: reads a Application of an API
      description: Specific Application of an API
      operationId: "org.zalando.apidiscovery.storage.api/get-api-Application!"
      tags:
      - APIs
      - Applications
      security:
      - oauth2:
        - uid
      parameters:
      - name: api_id
        in: path
        type: string
        description: ID of the API
        required: true
      - name: Application_name
        in: path
        type: string
        description: Application name
        required: true
      responses:
        200:
          description: Application of the API
          schema:
            $ref: '#/definitions/Application'
        default:
          $ref: '#/responses/Error'

  '/api-definitions/{api_definition_id}':
    put:
      summary: creates an API definition
      description: Creates an API definition
      operationId: "org.zalando.apidiscovery.storage.api/create-api-definition!"
      tags:
      - APIs
      security:
      - oauth2:
        - uid
        - overarching.api_definition.write
      parameters:
      - name: api_definition_id
        in: path
        type: string
        description: ID of the API, generated by client
        required: true
      - name: APIDefinition
        in: body
        description: API definition details that will be saved
        schema:
          $ref: '#/definitions/APIDefinition'
        required: true
      responses:
        201:
          description: API has been saved
        default:
          $ref: '#/responses/Error'

responses:
  Error:
    description: The occured error
    schema:
      $ref: '#/definitions/Error'

definitions:
  APIDefinition:
    type: object
    properties:
      status:
        type: string
        description: The current status of the crawling
        example: SUCCESS
      type:
        type: string
        description: Type of API definition
        example: SWAGGER-2.0
      name:
        type: string
        description: Name of the API
        example: Kio API
      version:
        type: string
        description: Version of the API
        example: "1.0"
      service_url:
        type: string
        description: URL pointing to the Application which is providing the API
        example: https://kio.example.com
      url:
        type: string
        description: Path to the API definition file
        example: /swagger/api.json
      ui:
        type: string
        description: Path to the UI for browsing the API
        example: /swagger-ui
      definition:
        type: string
        description: The API definition
        example: |
          {"swagger": "2.0"
           "foo": "bar"}
    required:
    - status

  API:
    type: object
    properties:
      name:
        type: string
        description: Human readable name of the API
        example: API Discovery Storage API
      lifecycle_state:
        $ref: '#/definitions/LifecycleState'
      applications:
        type: array
        items:
          $ref: '#/definitions/Application'
      versions:
        type: array
        items:
          $ref: '#/definitions/Version'

  APIMetadata:
    type: object
    properties:
      name:
        type: string
        description: Human readable name of the API
        example: API Discovery Storage API
      lifecycle_state:
        $ref: '#/definitions/LifecycleState'
      applications_count:
        type: integer
        description: Number of applications whe the API is deployed
      versions_count:
        type: integer
        description: Number of API versions

  Application:
    type: object
    description: A deployed instance of the API (an application)
    properties:
      name:
        type: string
        description: Application name (e.g. application and/or environment name)
        example: sales-orders-app
      service_url:
        type: string
        description: URL of the Application
        example: sales-orders.api.zalando.com
      ui:
        type: string
        description: Path to the UI for browsing the API
        example: /swagger-ui
      url:
        type: string
        description: Path to the API definition
        example: /swagger/api.json
      lifecycle_state:
        $ref: '#/definitions/LifecycleState'
      versions:
        type: array
        items:
          $ref: '#/definitions/Link'

  Version:
    type: object
    description: A version of one particular API
    properties:
      name:
        type: string
        description: Version of the API
        example: 1.0.0
      type:
        type: string
        description: Type of the API definition
        example: swagger-2.0
      definition:
        type: string
        description: Formal definition of the API
        example: |
          {"swagger": "2.0"
           "foo": "bar"}
      lifecycle_state:
        $ref: '#/definitions/LifecycleState'
      applications:
        type: array
        items:
          $ref: '#/definitions/Link'

  LifecycleState:
    type: string
    x-extensible-enum:
    - ACTIVE
    - INACTIVE
    - DECOMMISSIONED

  Link:
    type: object
    properties:
      name:
        type: string
        example: api-discovery-production
      href:
        type: string
        format: uri
        example: https://meta.api.example.com/apis/sales-orders/applications/api-discovery-production
    required:
    - name
    - href

  Error:
    type: object
    properties:
      message:
        type: string
        description: Human readable error message

  Cursors:
    type: object
    description: Cursor object
    properties:
      next:
        type: string
        description: Cursor to the next set of resources
      previous:
        type: string
        description: Cursor to the previous set of resources

securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: https://example.com/oauth2/dialog
    scopes:
      uid: Unique identifier of the user accessing the service.
      overarching.api_definition.write: Scope allowing the user to write API definitions.